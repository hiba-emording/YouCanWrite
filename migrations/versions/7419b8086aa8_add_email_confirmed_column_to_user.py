"""Add email_confirmed column to User

Revision ID: 7419b8086aa8
Revises: d1ce85c0f9a5
Create Date: 2024-07-12 21:46:08.710823

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '7419b8086aa8'
down_revision = 'd1ce85c0f9a5'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('review')
    op.drop_table('challenge_response')
    with op.batch_alter_table('comment', schema=None) as batch_op:
        batch_op.drop_constraint('comment_post_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'post', ['post_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('like', schema=None) as batch_op:
        batch_op.drop_constraint('like_post_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'post', ['post_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('email_confirmed', sa.Boolean(), nullable=True))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_column('email_confirmed')

    with op.batch_alter_table('like', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('like_post_id_fkey', 'post', ['post_id'], ['id'])

    with op.batch_alter_table('comment', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('comment_post_id_fkey', 'post', ['post_id'], ['id'])

    op.create_table('challenge_response',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('challenge_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['challenge_id'], ['challenge.id'], name='challenge_response_challenge_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='challenge_response_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='challenge_response_pkey')
    )
    op.create_table('review',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('post_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['post_id'], ['post.id'], name='review_post_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='review_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='review_pkey')
    )
    # ### end Alembic commands ###
